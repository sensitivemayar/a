'use server';

/**
 * @fileOverview Analyzes potential malicious payloads and summarizes their behavior.
 *
 * - analyzeMalwareBehavior - A function that handles the malware analysis process.
 * - AnalyzeMalwareBehaviorInput - The input type for the analyzeMalwareBehavior function.
 * - AnalyzeMalwareBehaviorOutput - The return type for the analyzeMalwareBehavior function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnalyzeMalwareBehaviorInputSchema = z.object({
  payloadDataUri: z
    .string()
    .describe(
      'A potentially malicious payload, as a data URI that must include a MIME type and use Base64 encoding. Expected format: \'data:<mimetype>;base64,<encoded_data>\'.'      
    ),
  description: z.string().describe('The description of the payload.'),
});
export type AnalyzeMalwareBehaviorInput = z.infer<typeof AnalyzeMalwareBehaviorInputSchema>;

const AnalyzeMalwareBehaviorOutputSchema = z.object({
  summary: z.string().describe('A summary of the behavior of the malicious payload.'),
  potentialImpact: z.string().describe('The potential impact of the malicious payload on the systems.'),
});
export type AnalyzeMalwareBehaviorOutput = z.infer<typeof AnalyzeMalwareBehaviorOutputSchema>;

export async function analyzeMalwareBehavior(input: AnalyzeMalwareBehaviorInput): Promise<AnalyzeMalwareBehaviorOutput> {
  return analyzeMalwareBehaviorFlow(input);
}

const prompt = ai.definePrompt({
  name: 'analyzeMalwareBehaviorPrompt',
  input: {schema: AnalyzeMalwareBehaviorInputSchema},
  output: {schema: AnalyzeMalwareBehaviorOutputSchema},
  prompt: `You are an expert malware analyst specializing in dynamic analysis of potentially malicious payloads.\n
You will use this information to analyze the behavior of the payload and its potential impact on the systems.\n\nDescription: {{{description}}}\nPayload: {{media url=payloadDataUri}}`,
});

const analyzeMalwareBehaviorFlow = ai.defineFlow(
  {
    name: 'analyzeMalwareBehaviorFlow',
    inputSchema: AnalyzeMalwareBehaviorInputSchema,
    outputSchema: AnalyzeMalwareBehaviorOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
